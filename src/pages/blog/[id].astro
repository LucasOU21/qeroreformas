---
// Import necessary components and utilities
import MainLayout from "@/layouts/MainLayout.astro";
import AvatarBlogLarge from "@components/ui/avatars/AvatarBlogLarge.astro";
import CardRelated from "@components/ui/cards/CardRelated.astro";
// import Bookmark from "@components/ui/buttons/Bookmark.astro";
// import SocialShare from "@components/ui/buttons/SocialShare.astro";
// import PostFeedback from "@components/ui/feedback/PostFeedback.astro";
import { Image } from "astro:assets";
import { capitalize, formatDate } from "@utils/utils";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { SITE } from "@data/constants";
import klingerImage from "@images/blog/Klinger.jpg";

// Import blog images
import post1Image from "@images/blog/post-1.jpg";
import post2Image from "@images/blog/post-2.jpg";
import post3Image from "@images/blog/post-3.jpg";

// Function to get correct image based on blog ID
function getBlogImage(blogId: string): typeof post1Image | typeof post2Image | typeof post3Image {
  const id = blogId.split('/')[1];
  switch(id) {
    case "encimera-en-los-disenos-de-cocina":
      return post1Image;
    case "estilos-de-cocina-disenos-que-inspiran":
      return post2Image;
    case "tendencias-en-suelos-laminados-y-tarimas-flotantes":
      return post3Image;
    default:
      return post1Image; // Default image
  }
}

// Update getStaticPaths for Spanish posts
export async function getStaticPaths() {
  const blogPosts = await getCollection("blog", ({ id }) =>
    id.startsWith("es/")
  );
  return blogPosts.map((post) => {
    const idWithoutLang = post.id.replace(/^es\//, ""); // Remove the "es/" prefix
    return {
      params: { id: idWithoutLang },
      props: { post },
    };
  });
}

// Get the current post's data
const { post } = Astro.props;

const blogPosts: CollectionEntry<"blog">[] = await getCollection(
  "blog",
  ({ id }) => id.startsWith("es/")
);

// Filter out the current post to get related posts
const relatedPosts: CollectionEntry<"blog">[] = blogPosts.filter(
  (blogEntry) => blogEntry.id !== post.id
);

const pageTitle: string = `${post.data.title} | Kalia Reformas`;

// Get blog image
const blogId: string = post.id;
const blogImage = getBlogImage(blogId);

// Check if encimeras blog
const isEncimerasBlog: boolean = blogId.includes("encimera-en-los-disenos-de-cocina");
---

<style>
  /* Custom styles for Kalia branding */
  :root {
    --kalia-primary: #daa520; /* Gold color for Kalia */
    --kalia-secondary: #333333;
    --kalia-accent: #f5f5f5;
  }
  
  h2, h3, h4 {
    font-family: 'Georgia', serif !important;
  }
  
  p, span, a, li {
    font-family: 'Poppins', sans-serif !important;
  }
  
  a:hover {
    color: var(--kalia-primary) !important;
  }
  
  /* Mobile styles for images */
  @media (max-width: 768px) {
    .image-after-text {
      display: flex;
      flex-direction: column;
    }
    
    .image-after-text .text-content {
      order: 1;
    }
    
    .image-after-text .image-content {
      order: 2;
      margin-top: 1.5rem;
    }
  }
</style>

<MainLayout title={pageTitle}>
  <section class="mx-auto max-w-3xl px-4 pb-12 pt-6 sm:px-6 lg:px-8 lg:pt-10">
    <div class="max-w-2xl">
      <div class="mb-6 flex items-center justify-between">
        <div class="flex w-full gap-x-5 sm:items-center sm:gap-x-3">
          <!-- Avatar with Klinger image -->
          <div class="inline-block h-12 w-12 overflow-hidden rounded-full">
            <Image
              src={klingerImage}
              alt="Klinger Mallqui"
              class="h-full w-full rounded-full object-cover"
              width={48}
              height={48}
            />
          </div>
          <div class="grow">
            <div class="flex items-center justify-between gap-x-2">
              <div>
                <!--Post metadata and author info-->
                <span class="font-bold text-neutral-700 dark:text-neutral-300">
                  Klinger Mallqui
                </span>
                <ul class="text-xs text-neutral-500">
                  <li
                    class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                  >
                    {formatDate(post.data.pubDate)}
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!--Blog post title-->
      <h2
        class="mb-3 text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-3xl"
      >
        {post.data.title}
      </h2>
      <!--Blog post contents-->
      <div class="mb-5 space-y-5 md:mb-8 md:space-y-8">
        {
          post.data.contents.map((content: string, index: number) => {
            if (index === 0) {
              return (
                <p class={`text-pretty text-lg text-neutral-700 dark:text-neutral-300 ${content.length <= 45 ? "font-bold" : ""}`}>
                  {content}
                </p>
              );
            } else if (index === 1) {
              return (
                <div class="image-after-text">
                  <p class={`text-pretty text-lg text-neutral-700 dark:text-neutral-300 text-content ${content.length <= 45 ? "font-bold" : ""}`}>
                    {content}
                  </p>
                  <div class="image-content">
                    <Image
                      class="w-full rounded-xl object-cover"
                      src={post1Image}
                      alt="Featured blog image"
                      draggable="false"
                      format="jpg"
                    />
                  </div>
                </div>
              );
            } else if (index === 2 && !isEncimerasBlog) {
              return (
                <div class="image-after-text">
                  <p class={`text-pretty text-lg text-neutral-700 dark:text-neutral-300 text-content ${content.length <= 45 ? "font-bold" : ""}`}>
                    {content}
                  </p>
                  <div class="image-content">
                    <Image
                      class="w-full rounded-xl object-cover"
                      src={blogImage}
                      alt={post.data.cardImageAlt || "Blog image"}
                      draggable="false"
                      format="jpg"
                    />
                  </div>
                </div>
              );
            } else {
              return (
                <p class={`text-pretty text-lg text-neutral-700 dark:text-neutral-300 ${content.length <= 45 ? "font-bold" : ""}`}>
                  {content}
                </p>
              );
            }
          })
        }
      </div>
      <div
        class="mx-auto grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
      >
        <!--Blog post tags-->
        <div
          class="flex flex-wrap gap-x-2 gap-y-1 sm:flex-nowrap sm:items-center sm:gap-y-0"
        >
          {
            post.data.tags?.map((tag: string) => (
              <span class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300">
                {capitalize(tag)}
              </span>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <!--Related articles section-->
  <section class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
    <div class="mb-10 max-w-2xl">
      <h2
        class="text-balance text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        Art√≠culos Relacionados
      </h2>
    </div>

    <div class="grid grid-cols-2 gap-6">
      {relatedPosts.map((entry) => (
        <CardRelated blogEntry={entry} />
      ))}
    </div>
  </section>
</MainLayout>